class Solution {
public:
    int first_occ(vector<int>& arr, int size, int target){
        int start=0, end=size-1, mid= start+(end-start)/2 ;
        int ans=-1;
        while(start<=end){
            if(arr[mid]==target){
                ans=mid;
                end=mid-1;
            }
            else if(arr[mid]>target){
                end=mid-1;
            }
            else{
                start=mid+1;
            }
            mid= start+(end-start)/2 ;
        }
        return ans;
    }

int last_occ(vector<int>& arr, int size, int target){
        int start=0, end=size-1, mid= start+(end-start)/2 ;
        int ans=-1;
        while(start<=end){
            if(arr[mid]==target){
                ans=mid;
                start=mid+1;
            }
            else if(arr[mid]>target){
                end=mid-1;
            }
            else{
                start=mid+1;
            }
            mid= start+(end-start)/2 ;
        }
        return ans;
    }

    vector<int> searchRange(vector<int>& nums, int target) {
       
        int size=nums.size();
        int first = first_occ(nums,size,target);
        int last = last_occ(nums,size,target);
        return {first,last};
    }
};
