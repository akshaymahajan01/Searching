class Solution {
public:

    bool possible(vector<int>& position, int m , int mid){

         int last = position[0];
         int count=1;

         for(int i=1 ; i<position.size();i++)
         {
            if(position[i] - last >= mid){
                count++;
                last = position[i];
            }

            if(count >= m) return true;
         }
         return false;
    }
    int maxDistance(vector<int>& position, int m) {

        sort(position.begin() , position.end());

        int n = position.size();

        int left=1;
        int right = position[n-1] - position[0];

        while(left<=right){
            int mid = left + (right-left)/2;

            if(possible(position , m , mid)){
                left = mid+1;
            }else{
                right=mid-1;
            }
        }

        return right;
        
    }
};
